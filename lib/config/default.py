from __future__ import absolute_import
from __future__ import division
from __future__ import print_function


from yacs.config import CfgNode as CN


_C = CN()

# ----- BASIC SETTINGS -----
_C.NAME = "default"
_C.OUTPUT_DIR = "./output"
_C.VALID_STEP = 5
_C.SAVE_STEP = 5
_C.SHOW_STEP = 20
_C.PIN_MEMORY = True
_C.INPUT_SIZE = (224, 224)
_C.COLOR_SPACE = "RGB"
_C.RESUME_MODEL = ""
_C.RESUME_MODE = "all"
_C.CPU_MODE = False
_C.EVAL_MODE = False
_C.HOOK_ON = False

# ----- DATASET BUILDER -----
_C.DATASET = CN()
_C.DATASET.DATASET = "ImageNet"
_C.DATASET.ROOT = "./datasets"
_C.DATASET.DATA_TYPE = "JPEG"
_C.DATASET.TRAIN_JSON = ""
_C.DATASET.VALID_JSON = ""
_C.DATASET.IMBALANCECIFAR = CN()
_C.DATASET.IMBALANCECIFAR.RATIO = 0.01
_C.DATASET.IMBALANCECIFAR.RANDOM_SEED = 0
_C.DATASET.AUTO_ALPHA=True

# ----- CLASSIFIER AUTO ALPHA -----
_C.AUTO_ALPHA = CN()
_C.AUTO_ALPHA.ALPHA=-1
_C.AUTO_ALPHA.LENGTH=100
_C.AUTO_ALPHA.GAMMA=2.

_C.AUTO_ALPHA.LOSS0_FACTOR=1.
_C.AUTO_ALPHA.LOSS1_FACTOR=2.

# ----- BACKBONE BUILDER -----
_C.BACKBONE = CN()
_C.BACKBONE.TYPE = "resnext50"
_C.BACKBONE.FREEZE = False
_C.BACKBONE.REFEEZE_LAST_BLOCK = False
_C.BACKBONE.REFEEZE_LAST_STAGE = False
_C.BACKBONE.PRETRAINED_MODEL = ""

# ----- MODULE BUILDER -----
_C.MODULE = CN()
_C.MODULE.TYPE = "GAP"

# ----- CLASSIFIER BUILDER -----
_C.CLASSIFIER = CN()
_C.CLASSIFIER.TYPE = "LDA"
_C.CLASSIFIER.BIAS=True

_C.CLASSIFIER.NECK = CN()
_C.CLASSIFIER.NECK.ENABLE=False
_C.CLASSIFIER.NECK.TYPE='Linear'
_C.CLASSIFIER.NECK.NUM_FEATURES=2048
_C.CLASSIFIER.NECK.NUM_OUT=128
_C.CLASSIFIER.NECK.HIDDEN_DIM=512
_C.CLASSIFIER.NECK.MARGIN=1.0
_C.CLASSIFIER.NECK.WEIGHT_INTER_LOSS=False
_C.CLASSIFIER.NECK.WEIGHT_INTRA_LOSS=False
_C.CLASSIFIER.NECK.INTER_DISTANCE=True
_C.CLASSIFIER.NECK.INTRA_DISTANCE=True
_C.CLASSIFIER.NECK.LOSS_FACTOR=1.

# ----- LOSS BUILDER -----
_C.LOSS = CN()
_C.LOSS.LOSS_TYPE = "CrossEntropy"

# ----- TRAIN BUILDER -----
_C.TRAIN = CN()
_C.TRAIN.BATCH_SIZE = 256
_C.TRAIN.MAX_EPOCH = 90
_C.TRAIN.SHUFFLE = True
_C.TRAIN.NUM_WORKERS = 8
_C.TRAIN.TENSORBOARD = CN()
_C.TRAIN.TENSORBOARD.ENABLE = True
_C.TRAIN.SUM_GRAD=False


# ----- SAMPLER BUILDER -----
_C.TRAIN.SAMPLER = CN()
_C.TRAIN.SAMPLER.TYPE = "default"

_C.TRAIN.SAMPLER.DUAL_SAMPLER = CN()
_C.TRAIN.SAMPLER.DUAL_SAMPLER.ENABLE = False
_C.TRAIN.SAMPLER.DUAL_SAMPLER.TYPE = "reversed"

_C.TRAIN.SAMPLER.WEIGHTED_SAMPLER = CN()
_C.TRAIN.SAMPLER.WEIGHTED_SAMPLER.TYPE = "balance"

_C.TRAIN.OPTIMIZER = CN()
_C.TRAIN.OPTIMIZER.TYPE = "SGD"
_C.TRAIN.OPTIMIZER.BASE_LR = 0.001
_C.TRAIN.OPTIMIZER.MOMENTUM = 0.9
_C.TRAIN.OPTIMIZER.WEIGHT_DECAY = 1e-4


_C.TRAIN.LR_SCHEDULER = CN()
_C.TRAIN.LR_SCHEDULER.TYPE = "multistep"
_C.TRAIN.LR_SCHEDULER.LR_STEP = [30, 60]
_C.TRAIN.LR_SCHEDULER.LR_FACTOR = 0.1
_C.TRAIN.LR_SCHEDULER.WARM_EPOCH = 5
_C.TRAIN.LR_SCHEDULER.COSINE_DECAY_END = 0

# testing
_C.TEST = CN()
_C.TEST.BATCH_SIZE = 32
_C.TEST.NUM_WORKERS = 8
_C.TEST.MODEL_FILE = ""

_C.TRANSFORMS = CN()
_C.TRANSFORMS.TRAIN_TRANSFORMS = ("random_resized_crop", "random_horizontal_flip")
_C.TRANSFORMS.TEST_TRANSFORMS = ("shorter_resize_for_crop", "center_crop")

_C.TRANSFORMS.PROCESS_DETAIL = CN()

_C.TRANSFORMS.PROCESS_DETAIL.RANDOM_CROP = CN()
_C.TRANSFORMS.PROCESS_DETAIL.RANDOM_CROP.PADDING = 4

_C.TRANSFORMS.PROCESS_DETAIL.RANDOM_RESIZED_CROP = CN()
_C.TRANSFORMS.PROCESS_DETAIL.RANDOM_RESIZED_CROP.SCALE = (0.08, 1.0)
_C.TRANSFORMS.PROCESS_DETAIL.RANDOM_RESIZED_CROP.RATIO = (0.75, 1.333333333)

_C.TRANSFORMS.PROCESS_DETAIL.COLOR_JITTER = CN()
_C.TRANSFORMS.PROCESS_DETAIL.COLOR_JITTER.brightness = 0.4
_C.TRANSFORMS.PROCESS_DETAIL.COLOR_JITTER.contrast = 0.4
_C.TRANSFORMS.PROCESS_DETAIL.COLOR_JITTER.saturation = 0.4
_C.TRANSFORMS.PROCESS_DETAIL.COLOR_JITTER.hue =0.

def update_config(cfg, args):
    cfg.defrost()
    cfg.merge_from_file(args.cfg)
    cfg.merge_from_list(args.opts)

    cfg.freeze()